[package]
name = "allotize-db"
version = "0.0.1"
authors = ["Rasmus Viitanen <rasviitanen@gmail.com>"]
description = "A client side database that runs in the browser"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = {version = "0.2.68", features = ["serde-serialize"]}
wasm-bindgen-futures = "0.4.18"
failure = "0.1.5"
serde = { version = "1.0.89" }
serde_derive = "^1.0.89"
serde_json = "1.0.39"
lazy_static = "1.4.0"
js-sys = "0.3.28"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"
console_error_panic_hook = "0.1.6"
getrandom = { version = "0.1.13", features = ["wasm-bindgen"] }

[dependencies.web-sys]
version = "0.3.27"
features = [
  "console",
  "Event",
  "ErrorEvent",
  "EventTarget",
  "IdbVersionChangeEvent",
  "Window",
  "Navigator",
  "IdbObjectStore",
  "IdbDatabase",
  "IdbFactory",
  "IdbIndex",
  "IdbRequest",
  "IdbRequestReadyState",
  "IdbTransaction",
  "IdbTransactionMode",
  "IdbOpenDbRequest",
  "ServiceWorker",
  "ServiceWorkerContainer",
  'Worker',
  'DedicatedWorkerGlobalScope',
  'MessageEvent',
]